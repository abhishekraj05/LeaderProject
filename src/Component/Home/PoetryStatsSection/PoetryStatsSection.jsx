import React from "react";
import { Swiper, SwiperSlide } from "swiper/react";
import SwiperCore, { Autoplay, Navigation, Pagination } from "swiper";
import CountUp from "react-countup";
import { useInView } from "react-intersection-observer";

import "swiper/css";
import "swiper/css/navigation";
import "swiper/css/pagination";
import "./PoetryStatsSection.css";
import poetryImage from "../../../assets/lalut.jpeg";

// Register modules manually for Swiper v9
SwiperCore.use([Autoplay, Navigation, Pagination]);

const poetryLines = [
  "‡§π‡§Æ ‡§∞‡§æ‡§à ‡§∏‡•á ‡§ú‡§µ‡§æ‡§π‡§∞ ‡§≤‡§æ‡§≤ ‡§∞‡§æ‡§Ø ‡§ú‡•Ä ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ï‡§Ç‡§ß‡•á ‡§∏‡•á ‡§ï‡§Ç‡§ß‡§æ ‡§Æ‡§ø‡§≤‡§æ‡§ï‡§∞ ‡§ú‡§®‡§∏‡•á‡§µ‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§∏‡§Ç‡§ï‡§≤‡•ç‡§™ ‡§≤‡•á‡§§‡•á ‡§π‡•à‡§Ç‡•§",
  "‡§ú‡§π‡§æ‡§Ç ‡§§‡§ï ‡§¶‡§ø‡§ñ‡•á ‡§ñ‡•á‡§§ ‡§µ‡§π‡•Ä ‡§§‡§ï ‡§™‡§π‡•Å‡§Ç‡§ö‡•á ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§ï‡•Ä ‡§∞‡•á‡§ñ‡§æ‡•§",
  "‡§π‡§∞ ‡§π‡§æ‡§• ‡§ï‡•ã ‡§ï‡§æ‡§Æ, ‡§π‡§∞ ‡§ö‡•á‡§π‡§∞‡•á ‡§™‡§∞ ‡§Æ‡•Å‡§∏‡•ç‡§ï‡§æ‡§® ‚Äì ‡§Ø‡§π‡•Ä ‡§π‡•à ‡§π‡§Æ‡§æ‡§∞‡§æ ‡§™‡•ç‡§∞‡§£‡•§",
  "‡§∏‡§Æ‡§∞‡•ç‡§™‡§£ ‡§î‡§∞ ‡§∏‡•á‡§µ‡§æ ‡§π‡•Ä ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§Ö‡§∏‡§≤‡•Ä ‡§™‡§π‡§ö‡§æ‡§® ‡§π‡•à‡•§",
  "‡§ú‡§®‡§§‡§æ ‡§ï‡•Ä ‡§â‡§Æ‡•ç‡§Æ‡•Ä‡§¶‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ï‡•Ä‡§ï‡§§ ‡§Æ‡•á‡§Ç ‡§¨‡§¶‡§≤‡§®‡§æ ‡§π‡•à ‡§π‡§Æ‡§æ‡§∞‡§æ ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø‡•§",
];

const stats = [
  { icon: "üåæ", value1: 10, value2: 150, suffix: "+", label: "Villages Visited" },
  { icon: "üßë‚Äçü§ù‚Äçüßë", value1: 90950, value2: 100000, suffix: "+", label: "Supporters" },
  { icon: "üì¢", value1: 10, value2: 200, suffix: "+", label: "Public Speeches" },
  { icon: "‚úÖ", value1: 30, value2: 100, suffix: "+", label: "Promises Fulfilled" },
];

const PoetryStatsSection = () => {
  const { ref, inView } = useInView({
    triggerOnce: true,
    threshold: 0.2,
  });

  return (
    <div className="poetry-section-wrapper">
      <div className="slider-container">
        <img
          src={poetryImage}
          alt="poetry background"
          className="slider-bg-img"
        />
        <div className="slider-overlay">
          <Swiper
            spaceBetween={30}
            autoplay={{ delay: 2000, disableOnInteraction: false }}
            loop={true}
            speed={800}
            pagination={{ clickable: true }}
            navigation={true}
            className="poetry-swiper"
          >
            {poetryLines.map((line, index) => (
              <SwiperSlide key={index}>
                <div className="quote-slide">
                  <p className="quote-text">‚Äú{line}‚Äù</p>
                  <p className="quote-author">‚Äî ‡§ú‡§®‡§∏‡•á‡§µ‡§æ ‡§Æ‡§ø‡§∂‡§®</p>
                </div>
              </SwiperSlide>
            ))}
          </Swiper>
        </div>
      </div>

      <div className="stats-section" ref={ref}>
        {stats.map((stat, i) => (
          <div className="stat-card" key={i}>
            <div className="icon">{stat.icon}</div>
            <div className="value">
              {inView ? (
                <CountUp
                  start={stat.value1}
                  end={stat.value2}
                  duration={3}
                  separator=","
                  suffix={stat.suffix}
                />
              ) : (
                "0" + stat.suffix
              )}
            </div>
            <div className="label">{stat.label}</div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default PoetryStatsSection;
